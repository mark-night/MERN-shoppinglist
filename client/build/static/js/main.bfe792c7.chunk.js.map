{"version":3,"sources":["reducers/itemReducer.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","actions/errorActions.js","actions/authActions.js","components/auth/Logout.js","components/auth/AuthModal.js","components/AppNavbar.js","actions/itemActions.js","components/ShoppingList.js","components/ItemModal.js","App.js","serviceWorker.js","index.js"],"names":["itemReducer","state","type","payload","initialState","token","localStorage","getItem","isAuthenticated","isUserLoading","user","authReducer","setItem","removeItem","msg","status","id","errorReducer","combineReducers","items","auth","error","store","createStore","reducers","applyMiddleware","thunk","getError","loadUserConfig","getState","headers","Logout","dispatch","useDispatch","NavLink","onClick","href","AuthModal","isRegister","useSelector","shallowEqual","useReducer","userReducer","name","email","password","userDispatch","useState","modal","setModal","toggle","useCallback","onSubmit","e","preventDefault","axios","post","then","data","catch","response","registerUser","login","useEffect","Modal","isOpen","ModalHeader","ModalBody","Alert","color","Form","Object","keys","filter","key","map","value","onChange","Button","style","marginTop","block","AuthInput","elemId","inputLabel","toUpperCase","slice","toLowerCase","FormGroup","Label","for","Input","className","target","AppNavbar","setIsOpen","Navbar","dark","expand","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","api","create","baseURL","ShoppingList","React","get","ListGroup","TransitionGroup","_id","CSSTransition","timeout","classNames","ListGroupItem","size","delete","item","ItemModal","itemName","setItemName","addItem","marginBottom","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.bfe792c7.chunk.js","sourcesContent":["import { GET_ITEMS, ADD_ITEM, DELETE_ITEM } from '../actions/types';\n\nconst itemReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case GET_ITEMS:\n      return [...payload];\n    case ADD_ITEM:\n      return [payload, ...state]; // latest first\n    case DELETE_ITEM:\n      return [...payload];\n    default:\n      return state;\n  }\n};\n\nexport default itemReducer;\n","export const GET_ITEMS = 'GET_ITEMS';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\n\n// AUTHENTICATION RELATED\nexport const USER_LOADING = 'USER_LOADING';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const GET_ERROR = 'GET_ERROR';\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\n","import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOGOUT_SUCCESS,\n  REGISTER_FAIL,\n  REGISTER_SUCCESS,\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  isUserLoading: false,\n  user: null,\n};\n\nconst authReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case USER_LOADING:\n      return { ...state, isUserLoading: true };\n    case USER_LOADED:\n      return {\n        ...state,\n        isUserLoading: false,\n        isAuthenticated: true,\n        user: payload,\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        isUserLoading: false,\n        isAuthenticated: true,\n        ...payload,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case LOGOUT_SUCCESS:\n      localStorage.removeItem('token');\n      return { ...initialState, token: null };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { GET_ERROR, CLEAR_ERROR } from '../actions/types';\n\nconst initialState = {\n  msg: null,\n  status: null,\n  id: null,\n};\n\nconst errorReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case GET_ERROR:\n      return { ...payload };\n    case CLEAR_ERROR:\n      return { ...initialState };\n    default:\n      return state;\n  }\n};\n\nexport default errorReducer;\n","import { combineReducers } from 'redux';\nimport itemReducer from './itemReducer';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\n\nexport default combineReducers({\n  items: itemReducer,\n  auth: authReducer,\n  error: errorReducer,\n});\n","// import { createStore, applyMiddleware, compose } from 'redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\n// export const store = createStore(\n//   reducers,\n//   compose(\n//     applyMiddleware(thunk),\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   )\n// );\n\nexport const store = createStore(reducers, applyMiddleware(thunk));\n","import { GET_ERROR, CLEAR_ERROR } from './types';\n\nexport const getError = (msg, status, id = null) => ({\n  type: GET_ERROR,\n  payload: { msg, status, id },\n});\n\nexport const clearError = () => ({ type: CLEAR_ERROR });\n","import axios from 'axios';\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOGOUT_SUCCESS,\n  REGISTER_FAIL,\n  REGISTER_SUCCESS,\n} from './types';\nimport { getError, clearError } from './errorActions';\n\n// check token and load user\nexport const loadUser = () => (dispatch, getState) => {\n  dispatch({ type: USER_LOADING });\n  axios\n    .get('/api/auth/user', loadUserConfig(getState))\n    .then(({ data }) => {\n      dispatch(clearError());\n      dispatch({ type: USER_LOADED, payload: data });\n    })\n    .catch(({ response: { data, status } }) => {\n      dispatch(getError(data.msg, status));\n      dispatch({ type: AUTH_ERROR });\n    });\n};\n\n// Register user\nexport const registerUser = user => dispatch => {\n  axios\n    .post('/api/users', user, {\n      headers: { 'Content-Type': 'application/json' },\n    })\n    .then(({ data }) => {\n      dispatch(clearError());\n      dispatch({ type: REGISTER_SUCCESS, payload: data });\n    })\n    .catch(({ response: { data, status } }) => {\n      dispatch(getError(data.msg, status, 'REGISTER_FAIL'));\n      dispatch({ type: REGISTER_FAIL });\n    });\n};\n\n// Logout user\nexport const logout = () => ({ type: LOGOUT_SUCCESS });\n\n// Login user\nexport const login = user => dispatch => {\n  // fetch token from server and update localStorage\n  axios\n    .post('/api/auth', user)\n    .then(({ data }) => {\n      dispatch(clearError());\n      dispatch({ type: LOGIN_SUCCESS, payload: data });\n    })\n    .catch(({ response: { data, status } }) => {\n      dispatch(getError(data.msg, status, 'LOGIN_FAIL'));\n      dispatch({ type: LOGIN_FAIL });\n    });\n};\n\nexport const loadUserConfig = getState => {\n  const token = getState().auth.token;\n  const headers = { 'Content-Type': 'application/json' };\n  if (token) headers['x-auth-token'] = token;\n  return { headers };\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'reactstrap';\nimport { logout } from '../../actions/authActions';\n\nexport const Logout = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <NavLink onClick={() => dispatch(logout())} href='#'>\n      Logout\n    </NavLink>\n  );\n};\n","import React, {\n  useState,\n  useReducer,\n  useCallback,\n  useEffect,\n  Fragment,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert,\n} from 'reactstrap';\nimport { registerUser, login } from '../../actions/authActions';\nimport { clearError } from '../../actions/errorActions';\n\nexport const AuthModal = ({ isRegister }) => {\n  const dispatch = useDispatch();\n  const error = useSelector(state => state.error, shallowEqual);\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n  const [user, userDispatch] = useReducer(userReducer, {\n    name: '',\n    email: '',\n    password: '',\n  });\n  const [modal, setModal] = useState(false);\n\n  const toggle = useCallback(() => {\n    dispatch(clearError());\n    userDispatch({ type: 'reset' });\n    setModal(state => !state);\n  }, [dispatch]);\n  const onSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      if (isRegister) {\n        dispatch(registerUser(user));\n      } else {\n        // login\n        dispatch(login({ email: user.email, password: user.password }));\n      }\n    },\n    [dispatch, user, isRegister]\n  );\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      toggle();\n    }\n  }, [isAuthenticated, toggle]);\n\n  return (\n    <Fragment>\n      <NavLink onClick={toggle} href='#'>\n        {isRegister ? 'Register' : 'Login'}\n      </NavLink>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>\n          {isRegister ? 'Register' : 'Login'}\n        </ModalHeader>\n        <ModalBody>\n          {error.id === (isRegister ? 'REGISTER_FAIL' : 'LOGIN_FAIL') && (\n            <Alert color='danger'>{error.msg}</Alert>\n          )}\n          <Form onSubmit={onSubmit}>\n            {Object.keys(user)\n              .filter(key => (isRegister ? true : key !== 'name'))\n              .map(key => (\n                <AuthInput\n                  isRegister={isRegister}\n                  key={key}\n                  name={key}\n                  value={user[key]}\n                  onChange={value =>\n                    userDispatch({ type: key, payload: value })\n                  }\n                />\n              ))}\n            <Button color='dark' style={{ marginTop: '2rem' }} block>\n              {isRegister ? 'Register' : 'Login'}\n            </Button>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </Fragment>\n  );\n};\n\nAuthModal.propTypes = {\n  isRegister: PropTypes.bool.isRequired,\n};\n\nconst AuthInput = ({ isRegister, name, value, onChange }) => {\n  const elemId = `${isRegister ? 'register' : 'login'}-${name}`;\n  const inputLabel = name[0].toUpperCase() + name.slice(1).toLowerCase();\n  const type = name === 'name' ? 'text' : name;\n\n  return (\n    <FormGroup>\n      <Label for={elemId}>{inputLabel}</Label>\n      <Input\n        className='mb-3'\n        type={type}\n        name={name}\n        id={elemId}\n        onChange={e => onChange(e.target.value)}\n        value={value}\n      />\n    </FormGroup>\n  );\n};\n\nAuthInput.propTypes = {\n  isRegister: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst userReducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'name':\n      return { ...state, name: payload };\n    case 'email':\n      return { ...state, email: payload };\n    case 'password':\n      return { ...state, password: payload };\n    case 'reset':\n      return { name: '', email: '', password: '' };\n    default:\n      return state;\n  }\n};\n","import React, { useState, useCallback } from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Container,\n} from 'reactstrap';\nimport { AuthModal, Logout } from './auth';\n\nexport const AppNavbar = () => {\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n  const user = useSelector(state => state.auth.user, shallowEqual);\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = useCallback(() => setIsOpen(state => !state), []);\n\n  return (\n    <Navbar color='dark' dark expand='sm' className='mb-5'>\n      <Container>\n        <NavbarBrand href='/'>Shopping List</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className='ml-auto' navbar>\n            <NavItem>\n              {isAuthenticated ? (\n                <span className='navbar-text mr-3'>\n                  Welcome, <strong>{user.name}</strong>\n                </span>\n              ) : (\n                <AuthModal isRegister={false} />\n              )}\n            </NavItem>\n            <NavItem>\n              {isAuthenticated ? <Logout /> : <AuthModal isRegister={true} />}\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n","import { ADD_ITEM, DELETE_ITEM, GET_ITEMS } from './types';\nimport { loadUserConfig } from './authActions';\nimport { getError, clearError } from './errorActions';\nimport axios from 'axios';\n\nconst api = axios.create({\n  // 'proxy' value defined in package.json is automatically prepended\n  baseURL: '/api/items',\n});\n\nexport const getItems = () => dispatch => {\n  api\n    .get('/')\n    .then(({ data }) => {\n      dispatch(clearError());\n      dispatch({ type: GET_ITEMS, payload: data });\n    })\n    .catch(({ response: { data, status } }) =>\n      dispatch(getError(data.msg, status))\n    );\n};\n\nexport const addItem = itemName => (dispatch, getState) => {\n  api\n    .post('/', { name: itemName }, loadUserConfig(getState))\n    .then(({ data }) => {\n      dispatch(clearError());\n      dispatch({ type: ADD_ITEM, payload: data });\n    })\n    .catch(({ response: { data, status } }) =>\n      dispatch(getError(data.msg, status, 'ADD_ITEM_ERROR'))\n    );\n};\n\nexport const deleteItem = id => (dispatch, getState) => {\n  api\n    .delete(`/${id}`, loadUserConfig(getState))\n    .then(() => {\n      dispatch(clearError());\n      dispatch({\n        type: DELETE_ITEM,\n        payload: getState().items.filter(item => item._id !== id),\n      });\n    })\n    .catch(({ response: { data, status } }) =>\n      dispatch(getError(data.msg, status))\n    );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getItems, deleteItem } from '../actions/itemActions';\nimport { ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nexport const ShoppingList = () => {\n  const items = useSelector(state => state.items);\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(getItems());\n  }, [dispatch]);\n\n  return (\n    <ListGroup>\n      <TransitionGroup className='shopping-list'>\n        {items.map(({ _id, name }) => (\n          <CSSTransition key={_id} timeout={500} classNames='fade'>\n            <ListGroupItem>\n              {isAuthenticated && (\n                <Button\n                  color='danger'\n                  size='small'\n                  className='remove-btn'\n                  onClick={() => dispatch(deleteItem(_id))}\n                >\n                  &times;\n                </Button>\n              )}\n              {name}\n            </ListGroupItem>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </ListGroup>\n  );\n};\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert,\n} from 'reactstrap';\nimport { addItem } from '../actions/itemActions';\n\nexport const ItemModal = () => {\n  const [modal, setModal] = useState(false);\n  const [itemName, setItemName] = useState('');\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n  const error = useSelector(state => state.error, shallowEqual);\n  const dispatch = useDispatch();\n  const toggle = useCallback(() => setModal(state => !state), []);\n  const onSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      dispatch(addItem(itemName));\n    },\n    [itemName, dispatch]\n  );\n\n  useEffect(() => {\n    if (error.id === 'ADD_ITEM_ERROR') {\n      setModal(true);\n    } else {\n      setModal(false);\n      setItemName('');\n    }\n  }, [error.id]);\n\n  return (\n    <div>\n      {isAuthenticated ? (\n        <Button color='dark' style={{ marginBottom: '2rem' }} onClick={toggle}>\n          Add Item\n        </Button>\n      ) : (\n        <h4 className='mb-3 ml-2'>Please login to manage list.</h4>\n      )}\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Add to shopping list</ModalHeader>\n        <ModalBody>\n          {error.id === 'ADD_ITEM_ERROR' && (\n            <Alert color='danger'>{error.msg}</Alert>\n          )}\n          <Form onSubmit={onSubmit}>\n            <FormGroup>\n              <Label for='item'>Item to add</Label>\n              <Input\n                name='name'\n                id='item'\n                onChange={e => setItemName(e.target.value)}\n                value={itemName}\n              />\n              <Button color='dark' style={{ marginTop: '2rem' }} block>\n                Add Item\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { Container } from 'reactstrap';\nimport { AppNavbar, ShoppingList, ItemModal } from './components';\nimport { loadUser } from './actions/authActions';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  });\n\n  return (\n    <Provider store={store}>\n      <div className='App'>\n        <AppNavbar />\n        <Container>\n          <ItemModal />\n          <ShoppingList />\n        </Container>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}